{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/Alert/Alert.js","components/App.js","index.js"],"names":["module","exports","INITIAL_CONTACT_STATE","name","number","ContactForm","state","inputName","target","setState","value","inputNumber","handleSubmit","e","preventDefault","addContact","props","this","onSubmit","className","style","Contact_form","type","onChange","placeholder","pattern","Component","ContactListItem","onDeleteContact","onClick","ContactList","items","onRemove","TransitionGroup","component","map","id","CSSTransition","key","timeout","classNames","Filter","inputFilter","in","appear","unmountOnExit","Alert","CONTACTS_DATA","App","contacts","filter","alert_contact","newContact","uuidv4","contact","includes","removeContact","contactId","onChangeFilter","getVisibleContacts","toLowerCase","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3ff5d684.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Contact_form\":\"ContactForm_Contact_form__1feFa\"};","import React, { Component } from \"react\";\r\n\r\nimport style from \"./ContactForm.module.css\";\r\n\r\nconst INITIAL_CONTACT_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n  state = INITIAL_CONTACT_STATE;\r\n\r\n  inputName = ({ target }) => {\r\n    this.setState({\r\n      name: target.value,\r\n    });\r\n  };\r\n\r\n  inputNumber = ({ target }) => {\r\n    this.setState({\r\n      number: target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { addContact } = this.props;\r\n\r\n    addContact({ name, number });\r\n    this.setState({ ...INITIAL_CONTACT_STATE });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={style.Contact_form}>\r\n        <label>\r\n          Name\r\n          <input\r\n            className={style.inputName}\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.inputName}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            placeholder=\"XXX-XX-XX\"\r\n            type=\"tel\"\r\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n            value={number}\r\n            onChange={this.inputNumber}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\">ADD CONTACT</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./ContacList.css\";\r\n\r\nexport default function ContactListItem({ name, number, onDeleteContact }) {\r\n  return (\r\n    <li className=\"phone_Item\">\r\n      <span className=\"phone_name\">{name}</span>\r\n      <span className=\"phone_number\">{number}</span>\r\n      <button type=\"button\" onClick={onDeleteContact}></button>\r\n    </li>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nimport ContactListItem from \"./ContactListItem\";\r\n\r\nimport \"./ContacList.css\";\r\n\r\nexport default function ContactList({ items, onRemove }) {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className=\"contact_list\">\r\n      {items.map(({ id, ...props }) => (\r\n        <CSSTransition key={id} timeout={250} classNames=\"list\">\r\n          <ContactListItem {...props} onDeleteContact={() => onRemove(id)} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./Filter.css\";\r\n\r\nconst Filter = ({ value, inputFilter }) => (\r\n  <CSSTransition\r\n    in={true}\r\n    appear={true}\r\n    classNames=\"find\"\r\n    timeout={500}\r\n    unmountOnExit\r\n  >\r\n    <div className=\"findContact\">\r\n      <p>Find contacts by name or number</p>\r\n      <input\r\n        className=\"inputName\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={({ target }) => inputFilter(target.value)}\r\n      />\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./alert.css\";\r\n\r\nconst Alert = () => (\r\n  <>\r\n    <CSSTransition\r\n      in={true}\r\n      appear={true}\r\n      timeout={500}\r\n      classNames=\"anim\"\r\n      unmountOnExit\r\n    >\r\n      <div className=\"alert\">Contact already exist</div>\r\n    </CSSTransition>\r\n  </>\r\n);\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\nimport Alert from \"./Alert/Alert\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst CONTACTS_DATA = [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    contacts: CONTACTS_DATA,\r\n    filter: \"\",\r\n    alert_contact: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem(\"contacts\");\r\n    if (contacts) {\r\n      this.setState({\r\n        contacts: JSON.parse(contacts),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n    if (prevState.contacts !== contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  addContact = ({ name, number }) => {\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name,\r\n      number,\r\n    };\r\n    const { contacts } = this.state;\r\n\r\n    const contactsNames = contacts.map((contact) => contact.name);\r\n\r\n    if (contactsNames.includes(name)) {\r\n      this.setState({ alert_contact: true });\r\n      return;\r\n    }\r\n\r\n    this.setState(({ contacts }) => {\r\n      return {\r\n        contacts: [newContact, ...contacts],\r\n        alert_contact: false,\r\n      };\r\n    });\r\n  };\r\n\r\n  removeContact = (contactId) => {\r\n    this.setState(({ contacts }) => {\r\n      return {\r\n        contacts: contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  onChangeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    return contacts.filter(\r\n      ({ name, number }) =>\r\n        name.toLowerCase().includes(filter.toLowerCase()) ||\r\n        number.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter, contacts, alert_contact } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div className=\"phoneBook_container\">\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          classNames=\"title_anim\"\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <h1 className=\"title\">Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        {alert_contact && <Alert />}\r\n\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          classNames=\"form_fade\"\r\n          timeout={500}\r\n          unmountOnExit\r\n        >\r\n          <ContactForm addContact={this.addContact} />\r\n        </CSSTransition>\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} inputFilter={this.onChangeFilter} />\r\n        )}\r\n\r\n        <ContactList items={visibleContacts} onRemove={this.removeContact} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./components/App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}